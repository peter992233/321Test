321Test v0.1 11/6/14 2:30PM
========================================

Development Log Created
Initial Design Implementations


FILE CHANGES
_________________________________

main .cpp & .h  (NEW) : Program Mainline
menu_functions .cpp & .h (NEW) : Deals with Menu Information and Flow
personalityquiz .cpp & .h (NEW) : Deals with Personality Quiz Data



CODE CHANGES
_________________________________
main .cpp & .h  Created
    -Added Mainline Menu Loop

menu_functions .cpp & .h Created
    -Added Menu Stubs
    -Added Function Stubs
    -Added Quiz

personalityquiz .cpp & .h Created (INCOMPLETE)
    -Added Questions
    -Added Quiz Structure
        * Create Encapsulation Loop that provides Exit Functionality
        * Create Explanation of Quiz format e.g. on a scale of 1 (lowest) to 5 (highest) how much do you value these things
        * Create Class to Pass the Score of each letter in the Myers Briggs Test
          + Create an AddScore Function as Part of that Class to accept
            a char and int variables (as outlined in comments)

    -Quiz Sourced From quiz_questions.txt (INCOMPLETE)
        * Add More Q's
        * Change Q's to suit Audience


321Test v0.1.1 11/6/14 7:20PM
========================================

Personality Quiz Modifications


FILE CHANGES
_________________________________

personalityquiz .cpp & .h (EDIT) : Deals with Personality Quiz Data



CODE CHANGES
_________________________________
personalityquiz .cpp & .h Created (INCOMPLETE)
    -Completed Quiz Structure
    -Quiz Sourced From quiz_questions.txt (NEEDS EDIT)
        * Add More Q's
        * Change Q's to suit Audience
        * Assign Degree Recommendations To Each Profile Type
        * Randomize Picking of Q's once expanded
            (Limit to 24q's of equal variance(3 For Each Letter))
        





321Test v0.1.2 11/6/14 8:20PM
========================================

Beginning Of Game Structure


FILE CHANGES
_________________________________

newplayer .cpp & .h  (NEW) : New Player Initialization & Game Setup



CODE CHANGES
_________________________________
newplayers .cpp & .h Created (INCOMPLETE)
    - Added newplayer class
        * Will Be Used As An Initialization State For The Game
    - Added Class Export (UNTESTED)
        * Needs Overloading Import & Export Functions
        * Add SQL Support/Change to Database Solution
    - Added Basic Player Class Structure
        * Needs More Added Such As Location Data, Date & Time
        * Indexing For Multiple Save States







321Test v0.1.3 13/6/14 12:06PM
========================================

Testing of File Methods


FILE CHANGES
_________________________________
newplayer .cpp & .h  (ARCHIVED) : New Player Initialization & Game Setup


CODE CHANGES
_________________________________
newplayers .cpp & .h Archived (ARCHIVED)
    - Restructuring of The Player Classes & Header
        *Due to learning and testing Serialization and/or SQL implementation for data management
        *May Be Recycled at a later Date But For Now they are removed to archive
        



321Test v0.1.4 13/6/14 4:10PM
========================================

Simple File Storage Method (.txt) Implemented


FILE CHANGES
_________________________________
player_data .cpp & .h  (NEW) : Player Data Store Code
global_data.txt (NEW) : Contains Global information such as the number of Saves
savefile.txt (NEW) : Contains Save States of the test class player_data


CODE CHANGES
_________________________________
player_data .cpp & .h (INCOMPLETE)
    - Simple Implementation of File Saving and Structure
        * Need to Implement Loading Files to the Current save
        * Also Need to Implement File Deletion
    - Menus Changed to Appropriate Data Display and Responses




321Test v0.1.5 25/6/14 4:10PM
========================================

FILE CHANGES
_________________________________
player_data .cpp & .h  (EDIT) : Added Loading From File



CODE CHANGES
_________________________________
player_data .cpp & .h (INCOMPLETE)
    - Loading Data Implemented
        * Add a selection screen for loading saves
    -Deleting Game Saves Implemented





321Test v0.2.0 25/6/14 4:10PM
========================================

NOTES ON VERSION 0.2.0 CHANGES
- Debugging Framework Developed
- Restructure of Debug Menu
- Saves Stored in Vector<string> Structure
- Saves Also Stored Externally in player_data.txt
- savefile.txt & global_data.txt redundant (ARCHIVED)
- Ready to Work On Game Modules With Debugging Framework
- Code Commenting Up to Date for Completion of this Minor Version


FILE CHANGES
_________________________________
player_data .cpp & .h  (MAJOR REWORK) : Player Data Storage Changed
menu_functions .cpp & .h  (REBUILT) : Menu Changed to Reflect New Options


CODE CHANGES
_________________________________
player_data .cpp & .h
    - Local Data Structure Implemented Using Vector<string> to store local game saves
    - Saving & Loading Structure from File Implemented
    - Previous player_data Implementation Optimized
    - Able to Delete Files From Memory & close space
    - Saving And Loading Files Easy From Debug Menu
    - Code Commented & Tested


menu_functions .cpp & .h
    - Menu rebuild to reflect new debug options for saving & loading
        * Will Be Reshuffled further for individual data adds such as
            adding stamina to a player or direct modification of the profile
    - Code Commented





321Test v0.2.1 2/7/14 7:02PM
========================================

FILE CHANGES
_________________________________
Only Updates


CODE CHANGES
_________________________________
menu_functions .cpp & .h
    - Restructured menu only allows for exit by command
    - Simpler Menu Design that was broken down into Sections





321Test v0.2.2 9/7/14 12:40PM
========================================
Working on play testing the game design for the console version

FILE CHANGES
_________________________________
tutorial.txt (CREATED) : Contains the text information required for the tutorial level
menu_functions .cpp & .h  (EDIT) : Added Scenario Menu for Playtesting
scenarios .cpp & .h (CREATED) : Scenarios for Playtesting and Game Design


CODE CHANGES
_________________________________
scenarios .cpp & .h
    - Added text tutorial
    - Added Basic Game Screen
        * May Be Edited to Reflect more information required by the user





321Test v0.3.0 9/7/14 5:41PM
========================================
INITIAL GAME CONTROL IMPLEMENTED


FILE CHANGES
_________________________________
scenarios .cpp & .h (CREATED) : Creating initial game control structure
player_data .cpp & .h  (EDIT) : Added Game Data

CODE CHANGES
_________________________________
scenarios .cpp & .h
    - Added Game Control Functions
        * These Functions determine the current view and pass control
            between eachother to determine game flow
    - Created Initial View Transitions
    - Views Defined into number form
        * Menu = 0
        * Map View = 1
        * Outside View = 2
        * Inside View = 3
        * Dorm View = 4
        * PDA View = 5

player_data .cpp & .h
    - Player Class Extended
    - Added Location Data
    - Added Previous Location Data (Unimplemented)






321Test v0.3.1 16/7/14 5:19PM
========================================

FILE CHANGES
_________________________________
scenarios .cpp & .h (EDIT) : Game Flow Established
player_data .cpp & .h  (IMPLEMENT) : Used the un-implemented Pervious location variable

CODE CHANGES
_________________________________
scenarios .cpp & .h
    - Game Control Established
        * User Can Navigate freely Between Views
    - Activity Function Stubs Created
        * Commented Sections for required development

player_data .cpp & .h
    - Implemented Previous Location Data




321Test v0.3.2 20/7/14 5:30PM
========================================
TIME & LOCATION UPDATES


FILE CHANGES
_________________________________
timeHandler .cpp & .h (EDIT) : Time Tracking Implementation
player_data .cpp & .h  (IMPLEMENT) : Added time class to player_data


CODE CHANGES
_________________________________
timeHandler .cpp & .h
    - Created
    - Initial Time Progression Functions
    - Return Data Functions Created

player_data .cpp & .h
    - Added Time Class
    - Change Display Function to Show Time & Date
    - Changed the Save/Load functions to incorporate Time & Location Data

player_data.txt
    - Updated with Location and Time Data


=====================================================
=                     TASK LIST                     =
=====================================================

            +++++++++++++++++
            + SCENARIOS.CPP +
            +++++++++++++++++

- Add The Following to these Functions

    void gl_inside()
        * Add Lecture Event Handling
        * Add Tutorial Event Handling
        * Add Office Event Handling
        * Add Notice Board Display

    void gl_outside()
        * Add RNG
        * Add Event/NPC function That will accept the RNG and return an event number (or 0 if no availabel events)
        * Add Event Interaction Function


    void gl_dorm()
        * Add VideoGame Function (Reduce stress (maybe have stress edit function with input???)
        * Add Study Function 
        * Add Time Management + Sleep Function
        * Add Exercise Function (Increase Stamina??)
        
        
    void gl_pda()
        * Add PDA Functions
        * Add Subject Data retrieval functions
        * Add Global Data to track player progress

- Addtional Functions to Be Created
    Time Interaction Functions
        * Exam Week
        * Study Week
        * Mid Semester Break
    
    Subject & Subject Selection Function
        * O-Week Selection Function
        * List Of Subjects with CP cost & timetable
        * Timetable Manager & Display
    
    Update function to track
        * Available lecture/tutorials



            +++++++++++++++++++
            + PLAYER_DATA.CPP +
            +++++++++++++++++++
- Replace File Saving With More efficient method
- Expand Saving to encompass expanded player data variables
- Update File Saving to incorporate new data such as Time and Location
- Update Display To Translate Time Data into String e.g. (11.5,1 to 11:30, Monday etc)


            +++++++++++++++++++++++
            + PERSONALITYQUIZ.CPP +
            +++++++++++++++++++++++
- Add RNG To pick questions that will be asked
- Assign Degree Recommendations Based on Results



            ++++++++++++++++++++++
            + QUIZ_QUESTIONS.TXT +
            ++++++++++++++++++++++
- Modify Questions for target Audience
- Add More Questions's








